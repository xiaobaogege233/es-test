<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
    <!--slf4j配置文件直接放入classpath即可使用-->
    <!--定义日志文件的存储地址-->
    <property name="LOG_HOME" value="./logs" />
    <!--控制台日志， 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度,%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--文件日志， 按照每天生成日志文件 -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- linux下一般有启动命令指定日志，这里本地测试的时候打开可以模拟linux -->
        <file>${LOG_HOME}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 切割后的日志文件路径和命名 注意:第一个%d要接aux标识 不然不会根据后面得%d生成每天新的文件-->
            <fileNamePattern>${LOG_HOME}/logs-%d{yyyyMM,aux}/log-%d{yyyyMMdd}.log.%i{1}</fileNamePattern>
            <!-- 按大小切割日志的触发策略 -->
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>1</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>
    <!--ERROR日志， 按照每天生成日志文件 -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <file>${LOG_HOME}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 切割后的日志文件路径和命名 注意:第一个%d要接aux标识 不然不会根据后面得%d生成每天新的文件-->
            <fileNamePattern>${LOG_HOME}/logs-%d{yyyyMM,aux}/log-error-%d{yyyyMMdd}.log.%i{1}</fileNamePattern>
            <!-- 按大小切割日志的触发策略 -->
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>1</maxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50} - %msg%n</pattern>
        </encoder>
    </appender>

    <!--专为 mybatis 定制-->
    <logger name="top.zchd" level="DEBUG"/>

    <!-- 日志输出级别 -->
    <root level="INFO">
        <appender-ref ref="STDOUT" />
        <appender-ref ref="FILE"/>
        <appender-ref ref="ERROR"/>
    </root>
</configuration>